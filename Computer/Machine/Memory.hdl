// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/5/Memory.hdl
/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid and reads 0. Access to any address
 * in the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the Screen
 * and Keyboard chip specifications given in the lectures and the book.
 */
CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:

    //Address bits control

    //0x6000 is for Keyboard, from MSB 0x600 is 11 thenfore,
    And(a=address[13] , b=address[14] , out=loadKeyboard );
    Not(in=loadKeyboard , out=NOTloadKeyboard );
    
    //0x4000-0x5FFF Screen Memory
    And(a=address[14] , b=NOTloadKeyboard , out=l2 );

    //Control RAM to load 0 if address controls enable keyboard, or screen
    Or(a=loadKeyboard , b=l2 , out=NOTloadRAM );
    Not(in=NOTloadRAM , out=l1 );

    //Control Load input
    And(a=l1 , b=load , out=loadRAM );
    And(a=l2 , b=load , out=loadScreen );

    //Chips
    //[0..13] 15-Bits, because first bit in the address describe type of instruction C/A
    RAM16K(in=in , load=loadRAM , address=address[0..13] , out=outRAM );
    
    /*Screen is a I/O mapped chip inside the memory, since Screen in this project is 512 column
    and 256 pixel in row thenfore, 512*256/16 = 8192 word, log2(8192)=13, which is the size of
    the address bus the chip will use
    */
    Screen(in=in , load=loadScreen , address=address[0..12] , out=outScreen );

    //Keyboard
    Keyboard(out=outKeyboard);

    //Mux outputs based on control address bits
    Mux16(a=outKeyboard , b=outScreen , sel=l2 , out=o1);
    Mux16(a=o1 , b=outRAM , sel=l1, out= out);


}